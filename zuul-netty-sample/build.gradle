apply plugin: 'application'
apply plugin: 'groovy'

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {

    compile project(':zuul-core')
    compile project(':zuul-netty')

    compile "io.reactivex:rxnetty-spectator:${versions_rxnetty}"

    // Hack to stop asm exceptions at runtime.
    runtime 'org.ow2.asm:asm:5.0.3'
    runtime 'org.ow2.asm:asm-all:5.0.3'
    runtime 'org.apache.xbean:xbean-bundleutils:3.17'
    runtime 'org.apache.xbean:xbean-finder:3.17'

    compile "org.codehaus.groovy:groovy-all:${versions_groovy}"
    compile 'junit:junit-dep:4.10'

    testCompile("org.spockframework:spock-core:1.0-groovy-2.3")
    testCompile("org.codehaus.groovy.modules.http-builder:http-builder:0.7+")
}

sourceSets {
    test {
        java {
            srcDirs  = ['src/main/java']
            include '**/*.java'
        }
        groovy {
            srcDirs  = ['src/main/groovy', 'src/test/groovy']
            include '**/*.groovy'
        }
    }

    integrationTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/groovy')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath

    testLogging.showStandardStreams = true

    //If you want to ensure that integration tests are run every time when you invoke
    //this task, uncomment the following line.
    outputs.upToDateWhen { false }
}

// Don't normally run integrationTest task.
check.dependsOn -= integrationTest

//Ensure that the HTML reports of unit and integration tests are written to different directories.
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


mainClassName = 'com.netflix.zuul.NettySampleStartServer'
run {
    systemProperty "archaius.deployment.applicationId", "zuul"
    systemProperty "archaius.deployment.stack", "local"
    systemProperty "archaius.deployment.region", "us-east-1"
    systemProperty "archaius.deployment.environment", "test"
    systemProperty "eureka.environment", "test"
    systemProperty "eureka.region", "us-east-1"
    systemProperty "eureka.stack", "local"

//    String filtersRoot = new File(projectDir, "src/main/groovy/filters").getAbsolutePath()
//    System.setProperty("zuul.filters.root", filtersRoot)
}

