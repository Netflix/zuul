apply from: 'http://artifacts.netflix.com/gradle-netflix-local/artifactory.gradle'

def replacements = [
    [ 'org.json', 'json', 'org.json:json:1.0', ['compile', 'runtime'] ],
    [ 'org.powermock', 'powermock-api-mockito', 'org.powermock:powermock-mockito:1.4.12', ['provided'] ]
]

rootProject {
//    afterEvaluate { project ->
    afterProject { project ->
        println project
        println "project.configurations: ${project.configurations}"

        [ 'compile', 'runtime', 'provided' ].each { config_name ->
            println "config_name: ${config_name}"
            def conf = project.configurations.findByName(config_name)
            if(conf == null) return

            println "found ${conf}"

            def deps = conf.dependencies

            conf.dependencies.each { d ->
                println d
            }

            replacements.each { r -> 
                def dep = deps.find { it.group == r[0] && it.name == r[1] }
                if (dep == null) return

                println "removing ${dep}"
                deps.remove(dep)

                r[3].each { dep_config_name ->
                    println "adding ${dep_config_name} ${r[2]}"
                    project.dependencies.add(dep_config_name, r[2])
                }
            }
        }
/*
        def compileConf = project.configurations.findByName('compile')
        if (compileConf != null) {
            def deps = compileConf.dependencies

            def jsonDep = deps.find { it.group == 'org.json' && it.name == 'json' }
            if (jsonDep != null) {
                print "removing ${jsonDep}"
                deps.remove(jsonDep)
                project.dependencies.add('compile', "org.json:json:1.0")
                // project.dependencies.add('compile', "netflix:json:1.0")
            }
        }

        def providedConf = project.configurations.findByName('provided')        
        if (providedConf != null) {
            def deps = providedConf.dependencies

            def powermockDep = deps.find { it.group == 'org.powermock' && it.name == 'powermock-api-mockito' }
            if (powermockDep != null) {
                print "removing ${powermockDep}"
                deps.remove(powermockDep)
                // project.dependencies.add('compile', "org.json:json:1.0")
                // project.dependencies.add('compile', "netflix:json:1.0")
            }
        }
*/

    }
}
