
plugins {
    id 'nebula.netflixoss' version '10.6.0'
    id "com.google.osdetector" version "1.7.1"
    id "me.champeau.jmh" version "0.6.8"
    id "org.openrewrite.rewrite" version "5.30.0"
}

ext.githubProjectName = rootProject.name


idea {
    project {
        languageLevel = '1.8'
    }
}

configurations.all {
    exclude group: 'asm', module: 'asm'
    exclude group: 'asm', module: 'asm-all'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'
    apply plugin: 'nebula.javadoc-jar'
    apply plugin: 'nebula.dependency-lock'
    apply plugin: 'me.champeau.jmh'
    apply plugin: 'org.openrewrite.rewrite'

    license {
        ignoreFailures = false
        excludes([
                "**/META-INF/services/javax.annotation.processing.Processor",
                "**/META-INF/gradle/incremental.annotation.processors",
                "**/*.cert",
                "**/*.jks",
                "**/*.key",
        ])
    }

    group = "com.netflix.${githubProjectName}"

    sourceCompatibility = '1.8'

    eclipse {
        classpath {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    tasks.withType(Javadoc).each {
        it.classpath = sourceSets.main.compileClasspath
        // Ignore Javadoc warnings for now, re-enable after Zuul 3.
        it.options.addStringOption('Xdoclint:none', '-quiet')
    }

    ext {
        libraries = [
                guava: "com.google.guava:guava:31.1-jre",
                junit: "junit:junit:4.13.2",
                mockito: 'org.mockito:mockito-core:4.+',
                slf4j: "org.slf4j:slf4j-api:1.7.36",
                truth: 'com.google.truth:truth:1.1.3',
                awaitility: 'org.awaitility:awaitility:4.2.0'
        ]
    }

    test {
        testLogging {
            showStandardStreams = true
        }
    }
}

dependencies {
    rewrite(platform("org.openrewrite.recipe:rewrite-recipe-bom:1.10.0"))
    rewrite("org.openrewrite.recipe:rewrite-testing-frameworks")
}

rewrite {
    activeRecipe("org.openrewrite.java.testing.junit5.JUnit5BestPractices")
}
